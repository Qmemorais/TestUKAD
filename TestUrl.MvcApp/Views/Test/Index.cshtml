@using TestUrls.TestResultLogic.BusinessModels
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<TestResultDto>

<form method="get" action="~/Home">
    <input type="submit" value="Return" />
</form>

<p>Tested Link: @Model.FirstOrDefault().Link</p>
<p>Urls(html documents) found after crawling a website @Model.Count(link=>link.IsWeb)</p>
<p>Urls found in sitemap @Model.Count(link=>link.IsSitemap)</p>

<p>Urls FOUNDED BY CRAWLING THE WEBSITE AND NOT IN SITEMAP</p>
@await Html.PartialAsync("ResultTable", Model.Where(link=>link.IsWeb&&!link.IsSitemap))

<p>Urls FOUNDED IN SITEMAP AND NOT BY CRAWLING THE WEBSITE</p>
@await Html.PartialAsync("ResultTable", Model.Where(link=>link.IsSitemap&&!link.IsWeb))

<p>Urls FOUNDED BY CRAWLING THE WEBSITE AND SITEMAP.XML</p>
<table class="table table-bordered countLines"> 
    <thead>
        <tr>
            <th>Count</th>
            <th>Link</th>
            <th>Time, ms</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var link in Model)
        {
            <tr>
                <td></td>
                <td>@link.Link</td>
                <td>@link.TimeOfResponse ms</td>
            </tr>
        }
    </tbody>
</table>